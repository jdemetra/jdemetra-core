<?xml version="1.0"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->

<xs:schema version="0.1.0"
           targetNamespace="ec/eurostat/jdemetra/sa/x13"
            xmlns:tss="ec/eurostat/jdemetra/core"
           xmlns:sa="ec/eurostat/jdemetra/sa"
           xmlns:x13="ec/eurostat/jdemetra/sa/x13"
           xmlns:modelling="ec/eurostat/jdemetra/modelling"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified">

    <xs:import schemaLocation="processing.xsd" namespace="ec/eurostat/jdemetra/core"/>
    <xs:import schemaLocation="regarima.xsd" namespace="ec/eurostat/jdemetra/core"/>
    <xs:import schemaLocation="sacore.xsd" namespace="ec/eurostat/jdemetra/sa"/>
    <xs:import schemaLocation="modelling.xsd" namespace="ec/eurostat/jdemetra/modelling"/>


    <!--Enums-->

    <xs:simpleType name="OutliersDetectionMethodEnum">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base ="xs:NMTOKEN">
            <xs:enumeration value="AddOne"/>
            <xs:enumeration value ="AddAll"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="SeasonalFilterEnum">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base ="xs:NMTOKEN">
            <xs:enumeration value="S3x1"/>
            <xs:enumeration value="S3x3"/>
            <xs:enumeration value="S3x5"/>
            <xs:enumeration value="S3x9"/>
            <xs:enumeration value="S3x15"/>
            <xs:enumeration value="Msr"/>
            <xs:enumeration value="X11default"/>
            <xs:enumeration value="Undefined"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="CalendarSigmaEnum">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base ="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Signif"/>
            <xs:enumeration value="All"/>
            <xs:enumeration value="Select"/>
        </xs:restriction>
    </xs:simpleType>

    <!--Transformation-->

    <xs:complexType name="AutoTransformationSpecType">
        <xs:sequence>
            <xs:element name="AicDiff" type="xs:double" minOccurs="0" default="-2">
                <xs:annotation>
                    <xs:documentation>
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:group name="TransformationSpecGroup">
        <xs:choice>
            <xs:element name="Log"/>
            <xs:element name="Auto" type ="x13:AutoTransformationSpecType"/>
        </xs:choice>
    </xs:group>

    <xs:complexType name="TransformationSpecType">
        <xs:complexContent>
            <xs:extension base="modelling:TransformationSpecType">
                <xs:sequence>
                    <xs:group ref="x13:TransformationSpecGroup" minOccurs="0"/>
                    <xs:element name="Adjust" type="tss:LengthOfPeriodEnum"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--Estimation-->

    <xs:complexType name="EstimationSpecType">
        <xs:complexContent>
            <xs:extension base="modelling:EstimationSpecType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--Regression-->

    <xs:complexType name="AicTestType">
        <xs:sequence>
            <xs:element name="Variables" type="xs:NMTOKENS"/>
            <xs:choice minOccurs="0">
                <xs:element name="AicDiff" type="xs:double" default="0"/>
                <xs:element name="PValue" type="tss:Probability"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Chi2TestType">
        <xs:sequence>
            <xs:element name="Variables" type="xs:NMTOKENS"/>
            <xs:element name="PValue" type="tss:Probability"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="T_TestType">
        <xs:sequence>
            <xs:element name="Variables" type="xs:NMTOKENS"/>
            <xs:element name="CriticalValue" type="xs:double"/>
        </xs:sequence>
    </xs:complexType>

    <xs:group name="RegressionTestGroup">
        <xs:choice>
            <xs:element name="Aic" type="x13:AicTestType"/>
            <xs:element name="Chi2" type="x13:Chi2TestType"/>
            <xs:element name="T" type="x13:T_TestType"/>
        </xs:choice>
    </xs:group>

    <xs:complexType name="RegressionSpecType">
        <xs:complexContent>
            <xs:extension base="modelling:RegressionSpecType">
                <xs:sequence>
                    <xs:group ref="x13:RegressionTestGroup" id="Test" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--Arima modelling-->

    <xs:complexType name="AutoModellingSpecType">
        <xs:sequence>
            <xs:element name="Pcr" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Level of significance for the Ljung-Box Q-test used in automatic model identification.
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:double">
                        <xs:minInclusive value="0.8" />
                        <xs:maxExclusive value="1" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="Ub1" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        If one of the roots in the “AR(2)xARs(1) plus mean” estimation
                        (in the first step of the automatic identification of the differencing polynomial)
                        is larger than ub1, in modulus, it is set equal to unity.
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:double">
                        <xs:minInclusive value="0.8" />
                        <xs:maxExclusive value="1" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="Ub2" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        If one of the roots in the “ARMA(1,1)xARMAs(1,1) plus mean” estimation
                        (in the second step of the automatic model identification)
                        is larger than ub2, in modulus, it is set equal to unity.
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:double">
                        <xs:minInclusive value="0.7" />
                        <xs:maxExclusive value="1" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="Cancel" default="0.1" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        If the difference in moduli of an AR and an MA root
                        (when estimating Arma(1,1) x Arma s(1,1) models in
                        the second step of the automatic identifcation of the
                        differencing polynomial) is smaller than "cancel", the
                        two roots cancel out.
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:double">
                        <xs:minExclusive value="0.0" />
                        <xs:maxInclusive value="0.2" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="Tsig" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Minimum t for significant mean.
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:double">
                        <xs:minExclusive value="0.0" />
                        <xs:maxInclusive value="2.0" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="Pc" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Percentage by which va is reduced in the second round
                        (when outliers detection is enabled)
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:double">
                        <xs:minInclusive value="1.1" />
                        <xs:maxInclusive value="1.5" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>


    <xs:complexType name="ArimaSpecType">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0">
                <xs:element name="MeanCorrection" type="xs:boolean"/>
                <xs:element name="Mean" type="tss:ParameterType"/>
            </xs:choice>
            <xs:choice>
                <xs:element name="Orders" type="tss:SARIMA_OrderType"/>
                <xs:element name="Model" type="tss:SARIMA_ModelType"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <!--CalendarSpec-->

    <xs:complexType name="TradingDaysSpecType">
        <xs:sequence>
            <xs:element name="Calendar" type="xs:string" minOccurs="0"/>
            <xs:element name="TdOption" type="tss:TradingDaysEnum"/>
            <xs:element name="LpOption" type="tss:LengthOfPeriodEnum" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="EasterSpecType">
        <xs:sequence>
            <xs:element name="Duration" minOccurs="0">
                <xs:simpleType>
                    <xs:list>
                        <xs:simpleType>
                            <xs:restriction base="xs:unsignedShort">
                                <xs:minInclusive value="1"/>
                                <xs:maxInclusive value="15"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:list>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>


    <xs:complexType name="CalendarSpecType">
        <xs:complexContent>
            <xs:extension base="modelling:CalendarSpecType">
                <xs:sequence>
                    <xs:element name="TradingDays" type="x13:TradingDaysSpecType" minOccurs="0"/>
                    <xs:element name="Easter" type="x13:EasterSpecType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!--OutlierSpec-->

    <xs:complexType name="OutlierSpecType">
        <xs:complexContent>
            <xs:extension base="modelling:OutlierSpecType">
                <xs:sequence>
                    <xs:element name="Types" type="xs:NMTOKENS">
                        <xs:annotation>
                            <xs:documentation>
                                Tramo Code AIO. Types of outliers that are considered.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="CriticalValue" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Tramo code: VA. It is used to set the critical value for outlier
                                detection
                            </xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                            <xs:restriction base="xs:double">
                                <xs:minInclusive value="2" />
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element name="ML" type="xs:boolean" default="false" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Tramo code: IMVX. 0 : the fast method of Hannan{Rissanen is used for parameter
                                estimation in the automatic detection and
                                correction of outliers.
                                1 : maximum likelihood estimation is used for parameter
                                estimation in the automatic detection and correction
                                of outliers
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DeltaTC" default="0.7" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Tramo code: DELTATC. It affects only the TC outlier, which is equal to an
                                impulse divided by (1 - tcrate B).
                            </xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                            <xs:restriction base="xs:double">
                                <xs:minExclusive value="0" />
                                <xs:maxExclusive value="1" />
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!-- RegArima specification-->

    <xs:complexType name="RegArimaSpecificationType">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="modelling:ModellingSpecificationType">
                <xs:sequence>
                    <xs:element name="Transformation" type="x13:TransformationSpecType" minOccurs="0"/>
                    <xs:element name="Estimation" type="x13:EstimationSpecType" minOccurs="0"/>
                    <xs:element name="Regression" type="x13:RegressionSpecType" minOccurs="0"/>
                    <xs:element name="Calendar" type="x13:CalendarSpecType" minOccurs="0"/>
                    <xs:element name="Outliers" type="x13:OutlierSpecType" minOccurs="0"/>
                    <xs:choice>
                        <xs:element name="Arima" type="x13:ArimaSpecType" minOccurs="0"/>
                        <xs:element name="AutoModelling" type="x13:AutoModellingSpecType" minOccurs="0"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="RegArimaSpecificationEnum">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="RG0"/>
            <xs:enumeration value="RG1"/>
            <xs:enumeration value="RG2"/>
            <xs:enumeration value="RG3"/>
            <xs:enumeration value="RG4"/>
            <xs:enumeration value="RG5"/>
            <xs:enumeration value="RGfull"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:group name="RegArimaSpecificationGroup">
        <xs:choice>
            <xs:element name="Specification" type="x13:TramoSpecificationType"/>
            <xs:element name="DefaultSpecification" type="x13:TramoSpecificationEnum"/>
        </xs:choice>
    </xs:group>

    <xs:complexType name="X13SpecificationType">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="sa:SaSpecificationType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--X11-->

    <xs:complexType name="X11SpecType">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="DecompositionMode" type="sa:DecompositionEnum"/>
            <xs:element name ="UseForecasts" type="xs:boolean"/>
            <!--xs:element name="SeasonalMA" type="tss:uints" minOccurs ="0"/-->
            <xs:element name="LowerSigma">
                <xs:annotation>
                    <xs:documentation>
                        Lower bound of SIGMA parameter.
                        Default value is 1.5.
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base ="xs:double">
                        <xs:minExclusive value="0.5"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="UpperSigma">
                <xs:annotation>
                    <xs:documentation>
                        Upper bound of SIGMA parameter. Should be higher than lsigma.
                        Default value is 2.5.
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base ="xs:double">
                        <xs:minExclusive value="0.5"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="TrendMA">
                <xs:annotation>
                    <xs:documentation>
                        Length of the Henderson filter used for trend.
                        Should be 0 or any odd number between 1 and 99.
                        If 0, the length is automatically identified by the software.
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:maxInclusive value="99"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="CalendarSigma" type="x13:CalendarSigmaEnum" minOccurs ="0"/>
            <!--xs:element name ="SigmaVec" type="tss:uints" minOccurs="0"/-->
            <xs:element name="True7Term" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>


</xs:schema>
