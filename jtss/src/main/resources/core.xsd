<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2016 National Bank of Belgium

Licensed under the EUPL, Version 1.1 or â€“ as soon they will be approved 
by the European Commission - subsequent versions of the EUPL (the "Licence");
You may not use this work except in compliance with the Licence.
You may obtain a copy of the Licence at:

http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software 
distributed under the Licence is distributed on an "AS IS" basis,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the Licence for the specific language governing permissions and 
limitations under the Licence.
-->

<xs:schema version="0.1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="ec/eurostat/jdemetra/core"
           xmlns:tss="ec/eurostat/jdemetra/core"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified" >


    <!--Enumerations and simple types-->

    <xs:simpleType name="FrequencyEnum">
        <xs:annotation>
            <xs:documentation>
                Acceptable annual frequencies (= number of equally-spaced observations by year)
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:unsignedShort">
            <xs:enumeration value="1" />
            <xs:enumeration value="2" />
            <xs:enumeration value="3" />
            <xs:enumeration value="4" />
            <xs:enumeration value="6" />
            <xs:enumeration value="12" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="MonthEnum">
        <xs:annotation>
            <xs:documentation>
                Months
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="January" />
            <xs:enumeration value="February" />
            <xs:enumeration value="March" />
            <xs:enumeration value="April" />
            <xs:enumeration value="May" />
            <xs:enumeration value="June" />
            <xs:enumeration value="July" />
            <xs:enumeration value="August" />
            <xs:enumeration value="September" />
            <xs:enumeration value="October" />
            <xs:enumeration value="November" />
            <xs:enumeration value="December" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="DayOfWeekEnum">
        <xs:annotation>
            <xs:documentation>
                Days of the week
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Sunday" />
            <xs:enumeration value="Monday" />
            <xs:enumeration value="Tuesday" />
            <xs:enumeration value="Wednesday" />
            <xs:enumeration value="Thursday" />
            <xs:enumeration value="Fryday" />
            <xs:enumeration value="Saturday" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Period">
        <xs:annotation>
            <xs:documentation>
                1-based position of a period in an year. Should be in the range [1, frequency] (with frequency .le. 12)
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:unsignedShort">
            <xs:minInclusive value="1" />
            <xs:maxInclusive value="12" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="WeekEnum">
        <xs:annotation>
            <xs:documentation>
                1-based position of a week in a month. A week starts on Monday and finishes on Sunday.
                The first week of the month may be incomplete. The first complete week and the last complete
                week are identified by special values. The last week of the month is usually 5, but may
                be 4 on some occasions February finishing by a Monday). It is also identified by a special value/
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
            <xs:enumeration value="3"/>
            <xs:enumeration value="4"/>
            <xs:enumeration value="5"/>
            <xs:enumeration value="Last"/>
            <xs:enumeration value="FirstComplete"/>
            <xs:enumeration value="LastComplete"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ComponentEnum">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Undefined"/>
            <xs:enumeration value="Series"/>
            <xs:enumeration value="Trend"/>
            <xs:enumeration value="Cycle"/>
            <xs:enumeration value="Seasonal"/>
            <xs:enumeration value="Calendar"/>
            <xs:enumeration value="Irregular"/>
            <xs:enumeration value="SeasonallyAdjusted"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="PropertyType">
        <xs:annotation>
            <xs:documentation>
                Property represented by a string (value) and identified by a name
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Name" type="xs:string" />
            <xs:element name="Value" type="xs:string" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MetaDataType">
        <xs:annotation>
            <xs:documentation>
                Metadata defined as an (unordered) set of properties
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Property" type="tss:PropertyType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="ParameterInfoEnum">
        <xs:annotation>
            <xs:documentation>
                Information on the way a parameter should be used or interpreted.
                A fixed parameter is an "a priori" value, which doesn't result from an estimation procedure.
                An initial parameter is a parameter that should be used as a starting value in estimation procedures.
                An estimated parameter is the results of an estimation procedure.
                A derived parameter has been computed from other (usually estimated)
                parameters.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Undefined"/>
            <xs:enumeration value="Initial"/>
            <xs:enumeration value="Fixed"/>
            <xs:enumeration value="Estimated"/>
            <xs:enumeration value="Derived"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ParameterType">
        <xs:annotation>
            <xs:documentation>
                Parameter, with (except for "Undefined" parameter) its value and the way it has to be interpreted.
                Standard error and TStat of the parameter can be provided if the parameter has been
                estimated or derived.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name ="Value" type="xs:double" minOccurs="0"/>
            <xs:element name ="Stde" type="xs:double" minOccurs="0"/>
            <xs:element name ="Tstat" type="xs:double" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="optional"/>
        <xs:attribute name="type" type="tss:ParameterInfoEnum" use="required"/>
    </xs:complexType>

    <xs:complexType name="IndexedParameterType">
        <xs:complexContent>
            <xs:extension base="tss:ParameterType">
                <xs:attribute name="index" type="xs:integer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ParametersType">
        <xs:annotation>
            <xs:documentation>
                Array of parameters.
                When all the coefficients are unspecified, the order can be used
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice>
                <xs:element name="Coefficient" type="tss:IndexedParameterType" minOccurs="0" maxOccurs="unbounded" />
                <xs:element name="Order" type="xs:unsignedInt"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="Doubles">
        <xs:list itemType="xs:double"/>
    </xs:simpleType>

    <xs:simpleType name="Ints">
        <xs:list itemType="xs:int"/>
    </xs:simpleType>

    <xs:simpleType name="UnsignedInts">
        <xs:list itemType="xs:unsignedInt"/>
    </xs:simpleType>

    <xs:simpleType name="Booleans">
        <xs:list itemType="xs:boolean"/>
    </xs:simpleType>

    <xs:simpleType name="Probability">
        <xs:restriction base="xs:double">
            <xs:minExclusive value="0"/>
            <xs:maxExclusive value="1"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="MatrixType">
        <xs:annotation>
            <xs:documentation>
                Matrix of doubles
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Dimensions" type="tss:UnsignedInts"/>
            <xs:element name="Values" type="tss:Doubles"/>
        </xs:sequence>
    </xs:complexType>

    <!--Basic time series complex types-->

    <xs:group name="StartPeriod">
        <xs:sequence>
            <xs:element name="Frequency" type="tss:FrequencyEnum" />
            <xs:element name="FirstYear" type="xs:gYear" />
            <xs:element name="FirstPeriod" type="tss:Period" minOccurs="0"/>
        </xs:sequence>
    </xs:group>

    <xs:group name="TimeSpan">
        <xs:sequence>
            <xs:element name="Start" type="xs:date" minOccurs="0"/>
            <xs:element name="End" type="xs:date" minOccurs="0"/>
        </xs:sequence>
    </xs:group>

    <xs:group name="Range">
        <xs:sequence>
            <xs:element name="From" type="xs:unsignedInt" minOccurs="0"/>
            <xs:element name="To" type="xs:unsignedInt" minOccurs="0"/>
        </xs:sequence>
    </xs:group>

    <xs:group name="Exclusion">
        <xs:sequence>
            <xs:element name="First" type="xs:unsignedInt" minOccurs="0"/>
            <xs:element name="Last" type="xs:unsignedInt" minOccurs="0"/>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="PeriodSelectionType">
        <xs:annotation>
            <xs:documentation>
                A period selection is a flexible way for selecting a part in a time domain.

                The selection may be defined through start/end dates (FROM, TO, BETWEEN).
                In that case only the periods that are completely after and/or before the given dates are selected;
                only the date part is considered. For instance, if start=2 January, the first monthly period
                is February; if end = 31 March, the last monthly period is March.

                The period selection may also refer to the numbers of periods that should be selected (FIRST / LAST)
                or excluded (EXCLUDING) in the selection.
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="All" />
            <xs:element name="None" />
            <xs:group ref="tss:TimeSpan" id="Span"/>
            <xs:group ref="tss:Range"/>
            <xs:group ref="tss:Exclusion"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="TimePeriodType" abstract="true"/>
    <xs:complexType name="TimeDomainType" abstract="true"/>
    <xs:complexType name="TimeSeriesType" abstract="true"/>

    <xs:complexType name="TsPeriodType">
        <xs:annotation>
            <xs:documentation>
                Describes a regular time period
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tss:TimePeriodType">
                <xs:sequence>
                    <xs:element name="Frequency" type="tss:FrequencyEnum">
                        <xs:annotation>
                            <xs:documentation>
                                Annual frequency of this type of regular period
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Year" type="xs:gYear">
                        <xs:annotation>
                            <xs:documentation>
                                Year of the period
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Period" type="tss:Period" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Position of the period in its year. It is required when the frequency is .gt. 1.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TsDataType">
        <xs:annotation>
            <xs:documentation>
                Representation of a time series (data only). It is identified by the starting period
                (frequency, first year, first period) and by its values. Missing values are identified by NaN.
                A name (or description) may also be provided.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tss:TimeSeriesType">
                <xs:sequence>
                    <xs:group ref="tss:StartPeriod" />
                    <xs:element name="Values" type="tss:Doubles"/>
                </xs:sequence>
                <xs:attribute name="name" type="xs:string" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TsDomainType">
        <xs:annotation>
            <xs:documentation>
                Represents a time domain, identified by the starting period and by a number of periods (length).
                It corresponds to the domain of a time series
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tss:TimeDomainType">
                <xs:sequence>
                    <xs:group ref="tss:StartPeriod" />
                    <xs:element name="Length" type="xs:unsignedInt" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TsMonikerType">
        <xs:annotation>
            <xs:documentation>
                Univoque identifier of an information.
                It is composed of a "source" and of an "id".
                An optional name may be added. The name is not part of the actual identification key.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Source" type="xs:string" minOccurs="0" />
            <xs:element name="Id" type="xs:string" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <xs:attributeGroup name="TsIdentifier">
        <xs:attribute name="source" type="xs:string" use="optional" />
        <xs:attribute name="identifier" type="xs:string" use="optional" />
    </xs:attributeGroup>

    <xs:complexType name="TsType">
        <xs:annotation>
            <xs:documentation>
                Complete information of a time series. It extends a "TsDataType" (time series data)
                with its identifier and with metadata.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tss:TsDataType">
                <xs:sequence>
                    <xs:element name="MetaData" type="tss:MetaDataType" minOccurs="0" />
                </xs:sequence>
                <xs:attributeGroup ref="tss:TsIdentifier" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TsCollectionType">
        <xs:annotation>
            <xs:documentation>
                Ordered collection of time series.
                The collection may have its own identifier and its own metadata.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="MetaData" type="tss:MetaDataType" minOccurs="0" />
            <xs:element name="Data">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Ts" type="tss:TsType" minOccurs="0" maxOccurs="unbounded" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" />
        <xs:attributeGroup ref="tss:TsIdentifier" />
    </xs:complexType>

    <xs:complexType name="TsVariableType" abstract="true">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="name" type="xs:ID" use="required"/>
    </xs:complexType>

    <xs:complexType name="StaticTsVariableType">
        <xs:annotation>
            <xs:documentation>
                Default static regression variable. Data must be available.
                The name of the tsdata sub-item should be considered as a description, while the "name" attribute is the actual name of the variable
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tss:TsVariableType">
                <xs:sequence>
                    <xs:element name="TsData" type="tss:TsDataType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DynamicTsVariableType">
        <xs:annotation>
            <xs:documentation>
                Default dynamic regression variable. Identifier must be present.
                The name of the tsdata sub-item should be considered as a description, while the "name" attribute is the actual name of the variable
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tss:TsVariableType">
                <xs:sequence>
                    <xs:element name="Moniker" type="tss:TsMonikerType"/>
                    <xs:element name="Tsdata" type="tss:TsDataType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TsVariablesType">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Variable" type="tss:TsVariableType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!--Utilities-->

    <xs:complexType name="WeightedItem">
        <xs:sequence>
            <xs:element name="Item" type="xs:IDREF" />
            <xs:element name="Weight" type="xs:double" />
        </xs:sequence>
    </xs:complexType>

    <!--Elements-->

    <xs:element name="Matrix" type="tss:MatrixType"/>
    <xs:element name="TsData" type="tss:TsDataType"/>
    <xs:element name="MetaData" type="tss:MetaDataType"/>
    <xs:element name="Ts" type="tss:TsType"/>
    <xs:element name="TsCollection" type="tss:TsCollectionType"/>
    <xs:element name="VariablesDictionary" type="tss:TsVariablesType"/>

</xs:schema>